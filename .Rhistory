separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)")
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = Set)
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = Set, values_fn = length)
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = Set, values_fn = length())
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = Set, values_fn = "length")
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = Set, values_from = c(Read, value))
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = c("Set", "Read"))
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)")
mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = c("Status", "SEQID", "TAXID", "Set", "Read"), names_from = "Set", values_from = "value")
x <- mapped %>%
separate_rows(CIGAR, sep = " ") %>%
group_by(SEQID) %>%
mutate(order = row_number()) %>%
separate(CIGAR, into = c("taxid", "kmers"), convert = T) %>%
ungroup()
x
xx <- mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "Read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = c("Status", "SEQID", "TAXID", "Set", "Read"), names_from = "Set", values_from = "value")
xx %>%
separate_rows(CIGAR, sep = " ") %>%
group_by(SEQID, Read) %>%
mutate(order = row_number()) %>%
separate(CIGAR, into = c("taxid", "kmers"), convert = T) %>%
ungroup()
x <- xx %>%
separate_rows(CIGAR, sep = " ") %>%
group_by(SEQID, Read) %>%
mutate(order = row_number()) %>%
separate(CIGAR, into = c("taxid", "kmers"), convert = T) %>%
ungroup()
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers) %>%
mutate(taxeng = case_when(
taxid == "A" ~ "Ambiguous",
TRUE ~ taxeng
)) %>%
group_by(SEQID) %>%
arrange(order) %>%
mutate(CIGARPOS = cumsum(kmers)) %>%
do(add_row(.,
Status = first(.$Status, 1),
SEQID = first(.$SEQID, 1),
TAXID = first(.$TAXID, 1),
Length = first(.$Length, 1),
order = first(.$order, 1),
taxid = first(.$taxid, 1),
taxeng = first(.$taxeng, 1),
kmers = first(.$kmers, 1),
CIGARPOS = 0)) %>% # Start at 0 so lag mutate will make first kmer pos 1
arrange(SEQID, CIGARPOS) %>%
mutate(CIGARPOS2 = lag(CIGARPOS) + 1) %>% # Plus 1 because so kmer positions don't overlap
rename(CIGARstart = CIGARPOS2, CIGARend = CIGARPOS) %>%
filter(!is.na(CIGARstart))
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers)
x %>%
filter(taxid != 0, taxid != "A")
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid")
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers, everything())
xx <- mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = c("Status", "SEQID", "TAXID", "Set", "read"), names_from = "Set", values_from = "value")
x <- xx %>%
separate_rows(CIGAR, sep = " ") %>%
group_by(SEQID, read) %>%
mutate(order = row_number()) %>%
separate(CIGAR, into = c("taxid", "kmers"), convert = T) %>%
ungroup()
x
xx <- mapped %>%
separate(Length, into = c("length_1", "length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = length_1:CIGAR_2, names_to = c("Set", "read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = c("Status", "SEQID", "TAXID", "Set", "read"), names_from = "Set", values_from = "value")
x <- xx %>%
separate_rows(CIGAR, sep = " ") %>%
group_by(SEQID, read) %>%
mutate(order = row_number()) %>%
separate(CIGAR, into = c("taxid", "kmers"), convert = T) %>%
ungroup()
x
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers, everything()) %>%
mutate(taxeng = case_when(
taxid == "A" ~ "Ambiguous",
TRUE ~ taxeng
)) %>%
group_by(SEQID, read) %>%
arrange(order) %>%
mutate(CIGARPOS = cumsum(kmers)) %>%
do(add_row(.,
Status = first(.$Status, 1),
SEQID = first(.$SEQID, 1),
TAXID = first(.$TAXID, 1),
Length = first(.$Length, 1),
order = first(.$order, 1),
taxid = first(.$taxid, 1),
taxeng = first(.$taxeng, 1),
kmers = first(.$kmers, 1),
read = first(.$read, 1),
CIGARPOS = 0)) %>% # Start at 0 so lag mutate will make first kmer pos 1
arrange(SEQID, CIGARPOS)
xx <- mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = c("Status", "SEQID", "TAXID", "Set", "read"), names_from = "Set", values_from = "value")
x <- xx %>%
separate_rows(CIGAR, sep = " ") %>%
group_by(SEQID, read) %>%
mutate(order = row_number()) %>%
separate(CIGAR, into = c("taxid", "kmers"), convert = T) %>%
ungroup()
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers, everything()) %>%
mutate(taxeng = case_when(
taxid == "A" ~ "Ambiguous",
TRUE ~ taxeng
)) %>%
group_by(SEQID, read) %>%
arrange(order) %>%
mutate(CIGARPOS = cumsum(kmers)) %>%
do(add_row(.,
Status = first(.$Status, 1),
SEQID = first(.$SEQID, 1),
TAXID = first(.$TAXID, 1),
Length = first(.$Length, 1),
order = first(.$order, 1),
taxid = first(.$taxid, 1),
taxeng = first(.$taxeng, 1),
kmers = first(.$kmers, 1),
read = first(.$read, 1),
CIGARPOS = 0)) %>% # Start at 0 so lag mutate will make first kmer pos 1
arrange(SEQID, CIGARPOS)
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers, everything()) %>%
mutate(taxeng = case_when(
taxid == "A" ~ "Ambiguous",
TRUE ~ taxeng
)) %>%
group_by(SEQID, read) %>%
arrange(order) %>%
mutate(CIGARPOS = cumsum(kmers)) %>%
do(add_row(.,
Status = first(.$Status, 1),
SEQID = first(.$SEQID, 1),
TAXID = first(.$TAXID, 1),
Length = first(.$Length, 1),
order = first(.$order, 1),
taxid = first(.$taxid, 1),
taxeng = first(.$taxeng, 1),
kmers = first(.$kmers, 1),
read = first(.$read, 1),
CIGARPOS = 0)) %>% # Start at 0 so lag mutate will make first kmer pos 1
arrange(SEQID, read, CIGARPOS)
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers, everything()) %>%
mutate(taxeng = case_when(
taxid == "A" ~ "Ambiguous",
TRUE ~ taxeng
)) %>%
group_by(SEQID, read) %>%
arrange(order) %>%
mutate(CIGARPOS = cumsum(kmers)) %>%
do(add_row(.,
Status = first(.$Status, 1),
SEQID = first(.$SEQID, 1),
TAXID = first(.$TAXID, 1),
Length = first(.$Length, 1),
order = first(.$order, 1),
taxid = first(.$taxid, 1),
taxeng = first(.$taxeng, 1),
kmers = first(.$kmers, 1),
read = first(.$read, 1),
CIGARPOS = 0)) %>% # Start at 0 so lag mutate will make first kmer pos 1
arrange(read, SEQID, CIGARPOS)
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers, everything()) %>%
mutate(taxeng = case_when(
taxid == "A" ~ "Ambiguous",
TRUE ~ taxeng
)) %>%
group_by(SEQID, read) %>%
arrange(order) %>%
mutate(CIGARPOS = cumsum(kmers)) %>%
do(add_row(.,
Status = first(.$Status, 1),
SEQID = first(.$SEQID, 1),
TAXID = first(.$TAXID, 1),
Length = first(.$Length, 1),
order = first(.$order, 1),
taxid = first(.$taxid, 1),
taxeng = first(.$taxeng, 1),
kmers = first(.$kmers, 1),
read = first(.$read, 1),
CIGARPOS = 0)) %>% # Start at 0 so lag mutate will make first kmer pos 1
arrange(SEQID, read, CIGARPOS) %>%
mutate(CIGARPOS2 = lag(CIGARPOS) + 1) %>% # Plus 1 because so kmer positions don't overlap
rename(CIGARstart = CIGARPOS2, CIGARend = CIGARPOS)
tidyPairedKmerData <- function(x){
x <- mapped %>%
separate(Length, into = c("Length_1", "Length_2")) %>%
separate(CIGAR, into = c("CIGAR_1", "CIGAR_2"), sep = " \\|\\:\\| " ) %>%
pivot_longer(cols = Length_1:CIGAR_2, names_to = c("Set", "read"), names_pattern = "(.*)_(.*)") %>%
pivot_wider(id_cols = c("Status", "SEQID", "TAXID", "Set", "read"), names_from = "Set", values_from = "value") %>%
separate_rows(CIGAR, sep = " ") %>%
group_by(SEQID, read) %>%
mutate(order = row_number()) %>%
separate(CIGAR, into = c("taxid", "kmers"), convert = T) %>%
ungroup()
x %>%
filter(taxid != 0, taxid != "A") %>%
select(taxid) %>%
unique() %>%
rowwise(taxid) %>%
mutate(taxeng = rentrez::entrez_fetch(db = "taxonomy", id = taxid, rettype = "text"),
taxeng = stringr::str_match(taxeng, pattern = "1\\. (.*)\n"),
taxeng = taxeng[,2]) %>%
right_join(x, by = "taxid") %>%
mutate(taxeng = replace_na(taxeng, "Unclassified")) %>%
select(Status, SEQID, TAXID, Length, order, taxid, taxeng, kmers, everything()) %>%
mutate(taxeng = case_when(
taxid == "A" ~ "Ambiguous",
TRUE ~ taxeng
)) %>%
group_by(SEQID, read) %>%
arrange(order) %>%
mutate(CIGARPOS = cumsum(kmers)) %>%
do(add_row(.,
Status = first(.$Status, 1),
SEQID = first(.$SEQID, 1),
TAXID = first(.$TAXID, 1),
Length = first(.$Length, 1),
order = first(.$order, 1),
taxid = first(.$taxid, 1),
taxeng = first(.$taxeng, 1),
kmers = first(.$kmers, 1),
read = first(.$read, 1),
CIGARPOS = 0)) %>% # Start at 0 so lag mutate will make first kmer pos 1
arrange(SEQID, read, CIGARPOS) %>%
mutate(CIGARPOS2 = lag(CIGARPOS) + 1) %>% # Plus 1 because so kmer positions don't overlap
rename(CIGARstart = CIGARPOS2, CIGARend = CIGARPOS) %>%
filter(!is.na(CIGARstart))
}
tidyPairedKmerData(mapped)
tidyPairedKmerData(mapped) %>% View()
names(mapped)
names(x)
x
xx
x <- tidyPairedKmerData(mapped)
names(x)
"read" %in% names(x)
x
seqid <- x$SEQID[1]
p <- x %>%
mutate(taxlvl = as.numeric(as.factor(taxeng)),
taxlvl2 = paste(taxlvl,". ", taxeng, sep = ""),
taxlvl = as.factor(taxlvl)) %>%
filter(SEQID == seqid) %>%
ggplot(aes(y = taxlvl)) +
geom_segment(aes(yend = taxlvl,
x = CIGARstart - 0.5,
xend = CIGARend + 0.5,
colour = taxlvl2),
size = 2,
show.legend = T) +
theme(legend.title = element_blank(),
legend.position='bottom') +
scale_colour_viridis_d(begin = 0.2, direction = -1) +
guides(colour=guide_legend(ncol=2)) +
labs(x = "K-mer Position in Sequence",
y = "Taxonomic Identification",
title = seqid)
p
p + facet_grid(read ~ ., scales = "free", labeller = label_both)
mapped
devtools::document()
rm(list = c("tidyPairedKmerData"))
devtools::document()
library(krakenreports)
suppressPackageStartupMessages({
library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(optparse)
library(purrr)
library(krakenreports)
})
option_list <- list(
make_option(c("-i", "--input"),
action="store",
default=system.file("extdata", "mapped.tsv", package = "krakenreports"),
help="Kraken TSV - example included with package. Run without input to test."),
make_option(c("-s", "--seqid"),
action="store",
default=NA,
help="Sequence ID to display only one"),
make_option(c("-o", "--output"),
action="store",
default=paste(Sys.Date(), "_krakenreports", sep = ""),
help="Output prefix"),
make_option(c("-p", "--paired"),
action="store_true",
default=FALSE,
help="Paired end data?"),
make_option(c("-l", "--nolog"),
action="store_false",
default=TRUE,
help="Store log?")
)
opt <- parse_args(OptionParser(option_list=option_list), positional_arguments = TRUE)
fileprefix <- tools::file_path_sans_ext(opt$options$output)
opt$options$input <- "data/human.tsv"
mapped <- readKmerData(x = opt$options$input)
View(opt)
if(opt$options$paired){
x <-tidyPairedKmerData(mapped)
} else{
x <-tidyKmerData(mapped)
}
x %>%
ungroup() %>%
group_by(Status, SEQID, taxeng) %>%
summarise(Count = sum(kmers)) %>%
arrange(Status, SEQID, desc(Count)) %>%
select(Status, Sequence = SEQID, TaxonomicName = taxeng, Count, everything()) %>%
write_csv(paste0(fileprefix, "_perseq.csv"))
# All Kmers analy
x %>%
ungroup() %>%
group_by(taxeng) %>%
summarise(Count = sum(kmers)) %>%
arrange(desc(Count)) %>%
select(TaxonomicName = taxeng, Count) %>%
write_csv(paste0(fileprefix, "_allseqs.csv"))
# Write Plots
message(paste("Writing plots to", paste0(fileprefix, ".pdf")))
pdf(paste0(fileprefix, ".pdf"))
# Write Plots
message(paste("Writing plots to", paste0(fileprefix, ".pdf")))
pdf(paste0(fileprefix, ".pdf"))
if(is.na(opt$options$seqid)){
plotAllKmerCigars(x, lg = TRUE)
}else {
plotKmerCigar(x, opt$options$seqid)
}
dev.off()
opt$options$input <- "data/subset.tsv"
fileprefix <- tools::file_path_sans_ext(opt$options$output)
mapped <- readKmerData(x = opt$options$input)
if(opt$options$paired){
x <-tidyPairedKmerData(mapped)
} else{
x <-tidyKmerData(mapped)
}
x
View(x)
opt$options$input <- "data/paired-kraken.tsv"
mapped <- readKmerData(x = opt$options$input)
if(opt$options$paired){
x <-tidyPairedKmerData(mapped)
} else{
x <-tidyKmerData(mapped)
}
View(x)
x <-tidyPairedKmerData(mapped)
x
# Write reports
# Kmers per sequence
x %>%
ungroup() %>%
group_by(Status, SEQID, taxeng) %>%
summarise(Count = sum(kmers)) %>%
arrange(Status, SEQID, desc(Count)) %>%
select(Status, Sequence = SEQID, TaxonomicName = taxeng, Count, everything()) %>%
write_csv(paste0(fileprefix, "_perseq.csv"))
# All Kmers
x %>%
ungroup() %>%
group_by(taxeng) %>%
summarise(Count = sum(kmers)) %>%
arrange(desc(Count)) %>%
select(TaxonomicName = taxeng, Count) %>%
write_csv(paste0(fileprefix, "_allseqs.csv"))
pdf(paste0(fileprefix, ".pdf"))
if(is.na(opt$options$seqid)){
plotAllKmerCigars(x, lg = TRUE)
}else {
plotKmerCigar(x, opt$options$seqid)
}
dev.off()
View(x)
